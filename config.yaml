torch:
  device: 'mps'
  float_dtype: 'float32'

dimensions: 2

# Must begin with origin, be symmetric, and represent the roll shifts along channel axes.
kernel: [
  [0, 0],     # ORIGIN
  [-1, 0],    # UP
  [0, 1.0],   # RIGHT
  [1, 0],     # DOWN
  [0, -1]     # LEFT
]

environment:
  width: 100
  height: 100
  boundary_condition: "torus"
  channels: 
    - "source_sink"
    - "obstacle"
    - "scent"

  source_generation: "levy_dust"
  source_generation_params:
    pad: [0, 5] # these are ranges, low high
    alpha: [0.1, 2]
    beta: [-1, 1] 
    num_source: [50, 500]

  sink_generation: "levy_dust"
  sink_generation_params:
    pad: [0, 5]
    alpha: [0.1, 2]
    beta: [-1, 1]
    num_sink: [20, 200]

  obstacle_generation: "perlin_noise"
  obstacle_generation_params:
    obstacle_generation_params:
    threshold: [0.05, 0.2]
    frequency: [4.0, 16.0]
    octaves: [1, 4]
    persistence: [0.25, 1.0]
    lacunarity: [1.5, 3.0]

  scent_params:
    iterations: 300
    dropoff: 1

visualize:
  colormaps:
    source_sink: "PiYG"
    obstacle: "binary"
  chemo_alpha: 2
  
lifecycle:
  spore_params:
    initial_strength: 1.0
    initial_singal: "random"
  inoculation:
    num_spores: 3
    where_to_place: "on_food"
    selection_procedure: "random"
  stoppage:
    condition: "iterations"
    stoppage_range: [500, 1500] 
    stoppage_final: 0 # placeholder randomly updated

physiology:  
  channels:
    - "mass"      # Multiple channels each representing the weight between adjacent cells in the order of the kernel
    - "capital" 
    - "signals"   # Multiple channels

  perception_channels: # Note: cannot see food itself, only the scent
    - "obstacle"
    - "scent"
    - "mass_vector"
    - "capital"
    - "signals"

  actuators:
    - "rotate"      # %change in direction of flow, energy cost proportional to muscle size
    - "contract"    # %change in reservoir size (muscle) -- multiplied by open % TODO: Refractory period?
    - "grow"

  num_communication_channels: 10
  num_actuators: 17

  perception_kernel:
<<<<<<< HEAD
    kernel_type: "moore"
=======
    kernel_type: "moore" # FIND A KERNEL THAT WORKS WITH HEXAGONS, other than 1/6 everything?
    kernel_radius: 1
>>>>>>> aecada6 (reworking: cartesian -> axial)

physics:
  adjacency_kernel:
    kernel_type: "moore"

  capital_absorption_rate: 0.1
  exchange_rates:
    food_to_capital: 5.0        # 1 food -> 5 capital 
    capital_to_muscle: 0.7       # 1 capital -> 0.7 muscle
    muscle_contraction_cost: 0.2  
  min_mass: 0.1
  muscle_max_size: 2.0
  muscle_to_storage_atrophy_rate: 0.1
  network_complexity_cost: 0.1 